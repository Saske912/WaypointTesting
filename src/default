##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	# listen 80 default_server;
	# listen [::]:80 default_server;

	# SSL configuration
	#
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	include snippets/ssl-params.conf;
	include snippets/self-signed.conf;
	access_log  /home/acc.log;

    auth_basic           "Administratorâ€™s Area";
    auth_basic_user_file /etc/nginx/htpasswd;

   fastcgi_connect_timeout      300000;
   fastcgi_send_timeout         300000;
   fastcgi_read_timeout         300000;
   send_timeout                 300000;

    root /css;
	server_name localhost;

    location ~ \.css {
        add_header  Content-Type    text/css;
    }

	location / {
		resolver 127.0.0.1 valid=30s;
        set $upstream   proxy;
        fastcgi_pass $upstream:9000;
		include fastcgi_params;
	}

    location /add {
        resolver 127.0.0.1 valid=30s;
        set $upstream   proxy;
        fastcgi_pass $upstream:9000;
        include fastcgi_params;
    }

	location /put {
        client_max_body_size 300m;
        upload_store /upload;
        upload_pass /home;
	}

	location /columns {
        resolver 127.0.0.1 valid=30s;
        set $upstream   proxy;
        fastcgi_pass $upstream:9000;
        include fastcgi_params;
        set_form_input_multi $column;
        array_join ', ' $column to=$columns_set;
        fastcgi_param COLUMNS_SET $columns_set;
        set_form_input $file_name;
        fastcgi_param FILE_NAME $file_name;
	}

    location /get {
        resolver 127.0.0.1 valid=30s;
        set $upstream   proxy;
        fastcgi_pass $upstream:9000;
        include fastcgi_params;
    }

    location /push {
        resolver 127.0.0.1 valid=30s;
        set $upstream   proxy;
        fastcgi_pass $upstream:9000;
        include fastcgi_params;
        set_form_input $max_year;
        fastcgi_param  MAX_YEAR $max_year;
        set_form_input $min_year;
        fastcgi_param  MIN_YEAR $min_year;
        set_form_input $from_year;
        fastcgi_param  FROM_YEAR $from_year;
        set_form_input $to_year;
        fastcgi_param  TO_YEAR $to_year;
        set_form_input $region;
        fastcgi_param REGION $region;
        set_form_input $valid;
        fastcgi_param VALID $valid;
        set_form_input_multi $columns;
        array_join ', ' $columns to=$columns_set;
        fastcgi_param COLUMNS_SET $columns_set;
        set_form_input $quality;
        fastcgi_param QUALITY $quality;
        set_form_input $sex;
        fastcgi_param SEX $sex;
        set_form_input $timezone;
        fastcgi_param TIMEZONE $timezone;
        set_form_input $file_name;
        fastcgi_param FILE_NAME $file_name;
        set_form_input $block_region;
        fastcgi_param BLOCK_REGION $block_region;
    }

    location /ret {
        sendfile on;
        resolver 127.0.0.1 valid=30s;
        set $upstream   proxy;
        fastcgi_pass $upstream:9000;
        include fastcgi_params;
        set_form_input $count;
        fastcgi_param  COUNT $count;
        set_form_input $query;
        fastcgi_param  QUERY $query;
        set_form_input $columns;
        fastcgi_param COLUMNS_SET $columns;
        set_form_input $max_count;
        fastcgi_param MAX_COUNT $max_count;
    }
}

server 
{
	listen 80;
	listen [::]:80;
	server_name localhost;
	return 301 https://$server_name$request_uri;
}
